worker_processes 1;

user nobody nogroup;
# 'user nobody nobody;' for systems with 'nobody' as a group instead
error_log  /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
  worker_connections 1024; # increase if you have lots of clients
  accept_mutex off; # set to 'on' if nginx worker_processes > 1
  # 'use epoll;' to enable for Linux 2.6+
  # 'use kqueue;' to enable for FreeBSD, OSX
}

http {
  include mime.types;
  # fallback in case we can't determine a type
  default_type application/octet-stream;
  access_log /var/log/nginx/access.log combined;
  sendfile on;

  index    index.html index.htm index.php;

  # upstream app_server {
  #   # fail_timeout=0 means we always retry an upstream even if it failed
  #   # to return a good HTTP response

  #   # for UNIX domain socket setups
  #   server unix:/run/gunicorn/socket fail_timeout=0;

  #   # for a TCP configuration
  #   server localhost:9001 fail_timeout=0;
  # }

  server {
    # if no Host match, close the connection to prevent host spoofing
    listen 80 default_server;
    root /var/www/Apps/dash-webapp-template;
    # return 301 /index.html;
  }

  server {
    # use 'listen 80 deferred;' for Linux
    # use 'listen 80 accept_filter=httpready;' for FreeBSD
    listen 80;
    client_max_body_size 4G;

    # set the correct host(s) for your site
    server_name localhost;

    keepalive_timeout 5;

    # path for static files
    root /var/www/Apps/dash-webapp-template/static;

    location / {
      # checks for static file, if not found proxy to app
      try_files $uri @proxy_to_app;
    }

    location @proxy_to_app {
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Host $http_host;
      # we don't want nginx trying to do something clever with
      # redirects, we set the Host: header above already.
      proxy_redirect off;
      proxy_buffering off;
      proxy_pass http://localhost;
    }

  }

  server {
    listen          9001;
    server_name     localhost;
    location / {
      proxy_pass http://unix:/run/gunicorn/socket;
    }
    client_max_body_size 1G;

    # ## ERROR PAGES ## #
    error_page 404 /404.html;
    location = /404.html {
      root /var/www/Apps/dash-webapp-template/static/error-pages;
    }
    error_page 500 502 503 504 /500.html;
    location = /500.html {
      root /var/www/Apps/dash-webapp-template/static/error-pages;
    }
    error_page 413 513 /513.html;
    location = /513.html {
      root /var/www/Apps/dash-webapp-template/static/error-pages;
    }
  }

  # serve static docs files
  server {
    listen 9000;
    server_name localhost;
    autoindex on;
    autoindex_localtime on;
    fancyindex on;
    fancyindex_exact_size off;
    fancyindex_name_length 500;
    fancyindex_localtime on;

    root /var/www/Apps/dash-webapp-template/seqapp/prod/sessions;

    location / {
      # checks for static file, if not found proxy to app
      root /var/www/Apps/dash-webapp-template/seqapp/prod/sessions;
      index index.html;
    }

    location ~ \.php$ {
      include snippets/fastcgi-php.conf;
      fastcgi_pass unix:/run/php/php7.0-fpm.sock;
    }

  }

  # serve static docs files
  server {
    listen 8081;
    server_name localhost;

    root /var/www/Apps/Documentation;

    location / {
      # checks for static file, if not found proxy to app
      root /var/www/Apps/Documentation;
    }

  }


  server {
      listen          80;
      server_name     localhost;
      location / {
          proxy_pass http://unix:/run/gunicorn/socket;
      }
  }


}